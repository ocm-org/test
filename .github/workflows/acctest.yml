name: Acceptance Tests
# This workflow determines whether a PR comes from an external fork
# (which requires approval from us) or from a branch on this repository
# (which means it was made by us and can run immediately).  Once a PR
# is approved, the PR code gains access to secrets referenced in this
# workflow.

# The 'build' job and subsequent jobs, are executed only when the pull
# request is not a draft, regardless of whether it is from an internal
# branch or external fork.

# Any changes to this job, even from internal contributors, require heavy scrutiny.

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'LICENSE'
      - '**.md'
      - 'website/**'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  workflow_dispatch:

permissions:
  pull-requests: read
  contents: read

jobs:

  authorize:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request_target' && github.event.pull_request.draft == false)
    environment:
      ${{ github.event_name == 'pull_request_target' &&
      github.event.pull_request.head.repo.full_name != github.repository &&
      'external' || 'internal' }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name == 'pull_request_target' && format('acctest-authorize-pr-{0}', github.event.pull_request.number) || 'acctest-authorize' }}
      cancel-in-progress: true
    steps:
      - name: Debugging Output
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "Is Pull Request Draft: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.draft }}"
          echo "Head Repo Full Name: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}"
          echo "Concurrency Group: ${{ github.event_name == 'pull_request_target' && format('acctest-authorize-pr-{0}', github.event.pull_request.number) || 'acctest-authorize' }}"
          echo "new test"

  build:
    name: Build
    needs: authorize
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
